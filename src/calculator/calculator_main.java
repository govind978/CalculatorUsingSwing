/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package calculator;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.math.BigDecimal;
import java.math.BigInteger;
import javax.swing.UIManager;

/**
 *
 * @author GOVIND SINGLA
 */
public class calculator_main extends javax.swing.JFrame {
String val = "",val2="", operator = "";
String complete="" + val2,trigono="",display = "";
int a=0, one_operator=0,one_dot=0,one_plus_minus=0,trigo=0, result = 0;

    /**
     * Creates new form calculator_main
     */
    public calculator_main() {
       
       
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e) {
            e.printStackTrace();
        }
        initComponents();
    }
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        one = new javax.swing.JButton();
        three = new javax.swing.JButton();
        four = new javax.swing.JButton();
        five = new javax.swing.JButton();
        two = new javax.swing.JButton();
        seven = new javax.swing.JButton();
        six = new javax.swing.JButton();
        nine = new javax.swing.JButton();
        eight = new javax.swing.JButton();
        plus_minus = new javax.swing.JButton();
        dot = new javax.swing.JButton();
        zero = new javax.swing.JButton();
        plus = new javax.swing.JButton();
        equals = new javax.swing.JButton();
        multiply = new javax.swing.JButton();
        minus = new javax.swing.JButton();
        erase_all = new javax.swing.JButton();
        modulus = new javax.swing.JButton();
        divide = new javax.swing.JButton();
        erase_one = new javax.swing.JButton();
        tan = new javax.swing.JButton();
        cos = new javax.swing.JButton();
        sin = new javax.swing.JButton();
        sin_inverse = new javax.swing.JButton();
        ln = new javax.swing.JButton();
        log = new javax.swing.JButton();
        power = new javax.swing.JButton();
        tan_inverse = new javax.swing.JButton();
        cos_inverse = new javax.swing.JButton();
        square = new javax.swing.JButton();
        field = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        one.setBackground(new java.awt.Color(51, 51, 51));
        one.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        one.setForeground(new java.awt.Color(0, 0, 0));
        one.setText("1");
        one.setMaximumSize(new java.awt.Dimension(50, 50));
        one.setMinimumSize(new java.awt.Dimension(50, 50));
        one.setPreferredSize(new java.awt.Dimension(50, 50));
        one.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneActionPerformed(evt);
            }
        });
        one.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                oneKeyTyped(evt);
            }
        });

        three.setBackground(new java.awt.Color(51, 51, 51));
        three.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        three.setForeground(new java.awt.Color(0, 0, 0));
        three.setText("3");
        three.setMaximumSize(new java.awt.Dimension(50, 50));
        three.setMinimumSize(new java.awt.Dimension(50, 50));
        three.setPreferredSize(new java.awt.Dimension(50, 50));
        three.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threeActionPerformed(evt);
            }
        });

        four.setBackground(new java.awt.Color(51, 51, 51));
        four.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        four.setForeground(new java.awt.Color(0, 0, 0));
        four.setText("4");
        four.setMaximumSize(new java.awt.Dimension(50, 50));
        four.setMinimumSize(new java.awt.Dimension(50, 50));
        four.setPreferredSize(new java.awt.Dimension(50, 50));
        four.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fourActionPerformed(evt);
            }
        });

        five.setBackground(new java.awt.Color(51, 51, 51));
        five.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        five.setForeground(new java.awt.Color(0, 0, 0));
        five.setText("5");
        five.setMaximumSize(new java.awt.Dimension(50, 50));
        five.setMinimumSize(new java.awt.Dimension(50, 50));
        five.setPreferredSize(new java.awt.Dimension(50, 50));
        five.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiveActionPerformed(evt);
            }
        });

        two.setBackground(new java.awt.Color(51, 51, 51));
        two.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        two.setForeground(new java.awt.Color(0, 0, 0));
        two.setText("2");
        two.setMaximumSize(new java.awt.Dimension(50, 50));
        two.setMinimumSize(new java.awt.Dimension(50, 60));
        two.setPreferredSize(new java.awt.Dimension(60, 50));
        two.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoActionPerformed(evt);
            }
        });

        seven.setBackground(new java.awt.Color(51, 51, 51));
        seven.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        seven.setForeground(new java.awt.Color(0, 0, 0));
        seven.setText("7");
        seven.setMaximumSize(new java.awt.Dimension(50, 50));
        seven.setMinimumSize(new java.awt.Dimension(50, 50));
        seven.setPreferredSize(new java.awt.Dimension(50, 50));
        seven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sevenActionPerformed(evt);
            }
        });

        six.setBackground(new java.awt.Color(51, 51, 51));
        six.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        six.setForeground(new java.awt.Color(0, 0, 0));
        six.setText("6");
        six.setMaximumSize(new java.awt.Dimension(50, 50));
        six.setMinimumSize(new java.awt.Dimension(50, 50));
        six.setPreferredSize(new java.awt.Dimension(50, 50));
        six.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sixActionPerformed(evt);
            }
        });

        nine.setBackground(new java.awt.Color(51, 51, 51));
        nine.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        nine.setForeground(new java.awt.Color(0, 0, 0));
        nine.setText("9");
        nine.setMaximumSize(new java.awt.Dimension(50, 50));
        nine.setMinimumSize(new java.awt.Dimension(50, 50));
        nine.setPreferredSize(new java.awt.Dimension(50, 50));
        nine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nineActionPerformed(evt);
            }
        });

        eight.setBackground(new java.awt.Color(51, 51, 51));
        eight.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        eight.setForeground(new java.awt.Color(0, 0, 0));
        eight.setText("8");
        eight.setMaximumSize(new java.awt.Dimension(50, 50));
        eight.setMinimumSize(new java.awt.Dimension(50, 50));
        eight.setPreferredSize(new java.awt.Dimension(50, 50));
        eight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eightActionPerformed(evt);
            }
        });

        plus_minus.setBackground(new java.awt.Color(51, 51, 51));
        plus_minus.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        plus_minus.setForeground(new java.awt.Color(0, 0, 0));
        plus_minus.setText("+/-");
        plus_minus.setMaximumSize(new java.awt.Dimension(50, 50));
        plus_minus.setMinimumSize(new java.awt.Dimension(50, 50));
        plus_minus.setPreferredSize(new java.awt.Dimension(50, 50));
        plus_minus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plus_minusActionPerformed(evt);
            }
        });

        dot.setBackground(new java.awt.Color(51, 51, 51));
        dot.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        dot.setForeground(new java.awt.Color(0, 0, 0));
        dot.setText(".");
        dot.setMaximumSize(new java.awt.Dimension(50, 50));
        dot.setMinimumSize(new java.awt.Dimension(50, 50));
        dot.setPreferredSize(new java.awt.Dimension(50, 50));
        dot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dotActionPerformed(evt);
            }
        });

        zero.setBackground(new java.awt.Color(51, 51, 51));
        zero.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        zero.setForeground(new java.awt.Color(0, 0, 0));
        zero.setText("0");
        zero.setMaximumSize(new java.awt.Dimension(50, 50));
        zero.setMinimumSize(new java.awt.Dimension(50, 50));
        zero.setPreferredSize(new java.awt.Dimension(50, 50));
        zero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zeroActionPerformed(evt);
            }
        });

        plus.setBackground(new java.awt.Color(51, 51, 51));
        plus.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        plus.setForeground(new java.awt.Color(0, 0, 0));
        plus.setText("+");
        plus.setMaximumSize(new java.awt.Dimension(50, 50));
        plus.setMinimumSize(new java.awt.Dimension(50, 50));
        plus.setPreferredSize(new java.awt.Dimension(50, 50));
        plus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusActionPerformed(evt);
            }
        });

        equals.setBackground(new java.awt.Color(51, 51, 51));
        equals.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        equals.setForeground(new java.awt.Color(0, 0, 0));
        equals.setText("=");
        equals.setMaximumSize(new java.awt.Dimension(50, 50));
        equals.setMinimumSize(new java.awt.Dimension(50, 50));
        equals.setPreferredSize(new java.awt.Dimension(50, 50));
        equals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equalsActionPerformed(evt);
            }
        });

        multiply.setBackground(new java.awt.Color(51, 51, 51));
        multiply.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        multiply.setForeground(new java.awt.Color(0, 0, 0));
        multiply.setText("x");
        multiply.setMaximumSize(new java.awt.Dimension(50, 50));
        multiply.setMinimumSize(new java.awt.Dimension(50, 50));
        multiply.setPreferredSize(new java.awt.Dimension(50, 50));
        multiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiplyActionPerformed(evt);
            }
        });

        minus.setBackground(new java.awt.Color(51, 51, 51));
        minus.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        minus.setForeground(new java.awt.Color(0, 0, 0));
        minus.setText("-");
        minus.setMaximumSize(new java.awt.Dimension(50, 50));
        minus.setMinimumSize(new java.awt.Dimension(50, 50));
        minus.setPreferredSize(new java.awt.Dimension(50, 50));
        minus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusActionPerformed(evt);
            }
        });

        erase_all.setBackground(new java.awt.Color(51, 51, 51));
        erase_all.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        erase_all.setForeground(new java.awt.Color(0, 0, 0));
        erase_all.setText("C");
        erase_all.setMaximumSize(new java.awt.Dimension(50, 50));
        erase_all.setMinimumSize(new java.awt.Dimension(50, 50));
        erase_all.setPreferredSize(new java.awt.Dimension(50, 50));
        erase_all.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                erase_allActionPerformed(evt);
            }
        });

        modulus.setBackground(new java.awt.Color(51, 51, 51));
        modulus.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        modulus.setForeground(new java.awt.Color(0, 0, 0));
        modulus.setText("%");
        modulus.setMaximumSize(new java.awt.Dimension(50, 50));
        modulus.setMinimumSize(new java.awt.Dimension(50, 50));
        modulus.setPreferredSize(new java.awt.Dimension(50, 50));
        modulus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modulusActionPerformed(evt);
            }
        });

        divide.setBackground(new java.awt.Color(51, 51, 51));
        divide.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        divide.setForeground(new java.awt.Color(0, 0, 0));
        divide.setText("/");
        divide.setMaximumSize(new java.awt.Dimension(50, 50));
        divide.setMinimumSize(new java.awt.Dimension(50, 50));
        divide.setPreferredSize(new java.awt.Dimension(50, 50));
        divide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divideActionPerformed(evt);
            }
        });

        erase_one.setBackground(new java.awt.Color(51, 51, 51));
        erase_one.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        erase_one.setForeground(new java.awt.Color(0, 0, 0));
        erase_one.setText("del");
        erase_one.setMaximumSize(new java.awt.Dimension(50, 50));
        erase_one.setMinimumSize(new java.awt.Dimension(50, 50));
        erase_one.setPreferredSize(new java.awt.Dimension(50, 50));
        erase_one.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                erase_oneActionPerformed(evt);
            }
        });

        tan.setBackground(new java.awt.Color(51, 51, 51));
        tan.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        tan.setForeground(new java.awt.Color(0, 0, 0));
        tan.setText("tan");
        tan.setMaximumSize(new java.awt.Dimension(50, 50));
        tan.setMinimumSize(new java.awt.Dimension(50, 50));
        tan.setPreferredSize(new java.awt.Dimension(50, 50));
        tan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tanActionPerformed(evt);
            }
        });

        cos.setBackground(new java.awt.Color(51, 51, 51));
        cos.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cos.setForeground(new java.awt.Color(0, 0, 0));
        cos.setText("cos");
        cos.setMaximumSize(new java.awt.Dimension(50, 50));
        cos.setMinimumSize(new java.awt.Dimension(50, 50));
        cos.setPreferredSize(new java.awt.Dimension(50, 50));
        cos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cosActionPerformed(evt);
            }
        });

        sin.setBackground(new java.awt.Color(51, 51, 51));
        sin.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        sin.setForeground(new java.awt.Color(0, 0, 0));
        sin.setText("sin");
        sin.setMaximumSize(new java.awt.Dimension(50, 50));
        sin.setMinimumSize(new java.awt.Dimension(50, 50));
        sin.setPreferredSize(new java.awt.Dimension(50, 50));
        sin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sinActionPerformed(evt);
            }
        });

        sin_inverse.setBackground(new java.awt.Color(51, 51, 51));
        sin_inverse.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        sin_inverse.setForeground(new java.awt.Color(0, 0, 0));
        sin_inverse.setText("sin^-1");
        sin_inverse.setMaximumSize(new java.awt.Dimension(50, 50));
        sin_inverse.setMinimumSize(new java.awt.Dimension(50, 50));
        sin_inverse.setPreferredSize(new java.awt.Dimension(50, 50));
        sin_inverse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sin_inverseActionPerformed(evt);
            }
        });

        ln.setBackground(new java.awt.Color(51, 51, 51));
        ln.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        ln.setForeground(new java.awt.Color(0, 0, 0));
        ln.setText("ln");
        ln.setMaximumSize(new java.awt.Dimension(50, 50));
        ln.setMinimumSize(new java.awt.Dimension(50, 50));
        ln.setPreferredSize(new java.awt.Dimension(50, 50));
        ln.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lnActionPerformed(evt);
            }
        });

        log.setBackground(new java.awt.Color(51, 51, 51));
        log.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        log.setForeground(new java.awt.Color(0, 0, 0));
        log.setText("log");
        log.setMaximumSize(new java.awt.Dimension(50, 50));
        log.setMinimumSize(new java.awt.Dimension(50, 50));
        log.setPreferredSize(new java.awt.Dimension(50, 50));
        log.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logActionPerformed(evt);
            }
        });

        power.setBackground(new java.awt.Color(51, 51, 51));
        power.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        power.setForeground(new java.awt.Color(0, 0, 0));
        power.setText("x^y");
        power.setMaximumSize(new java.awt.Dimension(50, 50));
        power.setMinimumSize(new java.awt.Dimension(50, 50));
        power.setPreferredSize(new java.awt.Dimension(50, 50));
        power.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                powerActionPerformed(evt);
            }
        });

        tan_inverse.setBackground(new java.awt.Color(51, 51, 51));
        tan_inverse.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tan_inverse.setForeground(new java.awt.Color(0, 0, 0));
        tan_inverse.setText("tan^-1");
        tan_inverse.setMaximumSize(new java.awt.Dimension(50, 50));
        tan_inverse.setMinimumSize(new java.awt.Dimension(50, 50));
        tan_inverse.setPreferredSize(new java.awt.Dimension(50, 50));
        tan_inverse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tan_inverseActionPerformed(evt);
            }
        });

        cos_inverse.setBackground(new java.awt.Color(51, 51, 51));
        cos_inverse.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        cos_inverse.setForeground(new java.awt.Color(0, 0, 0));
        cos_inverse.setText("cos^-1");
        cos_inverse.setMaximumSize(new java.awt.Dimension(50, 50));
        cos_inverse.setMinimumSize(new java.awt.Dimension(50, 50));
        cos_inverse.setPreferredSize(new java.awt.Dimension(50, 50));
        cos_inverse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cos_inverseActionPerformed(evt);
            }
        });

        square.setBackground(new java.awt.Color(51, 51, 51));
        square.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        square.setForeground(new java.awt.Color(0, 0, 0));
        square.setText("x^2");
        square.setMaximumSize(new java.awt.Dimension(50, 50));
        square.setMinimumSize(new java.awt.Dimension(50, 50));
        square.setPreferredSize(new java.awt.Dimension(50, 50));
        square.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                squareActionPerformed(evt);
            }
        });

        field.setText(complete);
        field.setBackground(new java.awt.Color(102, 102, 102));
        field.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        field.setForeground(new java.awt.Color(255, 255, 255));
        field.setEditable(false);
        field.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fieldKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(field, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(sin_inverse, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cos_inverse, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tan_inverse, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(power, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(square, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(ln, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(erase_one, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(erase_all, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(modulus, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(divide, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(sin, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cos, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(tan, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(log, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(one, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(two, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(three, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(multiply, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(dot, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(zero, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(plus_minus, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(equals, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(four, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(five, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(six, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(minus, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(seven, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(eight, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(nine, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(plus, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addComponent(field, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sin_inverse, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cos_inverse, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tan_inverse, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(power, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(square, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(divide, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modulus, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(erase_all, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(erase_one, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ln, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(one, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(two, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(three, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(multiply, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(log, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(four, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(five, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(six, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minus, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tan, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seven, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eight, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nine, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(plus, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cos, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dot, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zero, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(plus_minus, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(equals, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sin, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void plus_minusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plus_minusActionPerformed
        
        if(one_plus_minus == 0)
        {
       String minus = "-";
        val = minus + val;
       field.setText(val);
       a=1;
       one_plus_minus = 1;
       one_dot = 0;
        }
        else if(one_plus_minus == 2)
        {
       String minus = "-";
        val2 = minus + val2;
         complete = val+operator+val2;
   
           field.setText(complete);
       a=1;
       one_plus_minus = 1;
       one_dot = 0;
        }
    }//GEN-LAST:event_plus_minusActionPerformed

    private void plusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusActionPerformed
        if(one_operator == 0 && !"".equals(field.getText()))
        {
        operator = " + ";
        val = field.getText();
       field.setText(field.getText() + operator);
       a=1;
       one_operator = 1;
       one_plus_minus = 2;
       
       one_dot = 0;
       
        }
        
    }//GEN-LAST:event_plusActionPerformed

    private void equalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equalsActionPerformed
       if(operator == " + ")
       {
           try {
                 BigDecimal bd=new BigDecimal(val);
           BigDecimal bd2=new BigDecimal(val2);

           field.setText( String.valueOf((bd.add(bd2))));
          
           } 
           catch (Exception e) {
                field.setText("Error");
               
           }
            result = 1;
         operator = "";
           val = "";
           val2 = "";
           a=0;
           one_operator = 0;
           one_dot = 0;
           one_plus_minus = 0;
       }
       else if(operator == " - ")
       {
           try {
                  BigDecimal bd=new BigDecimal(val);
           BigDecimal bd2=new BigDecimal(val2);
         
           field.setText(String.valueOf((bd.subtract(bd2))));
                   

           } catch (Exception e) {
                field.setText("Error");
           }
           result = 1;
         operator = "";
           val = "";
           val2 = "";
           a=0;
            one_operator = 0;
            one_dot = 0;
            one_plus_minus = 0;
       }
       else if(operator == " * ")
       {
           try {
                BigDecimal bd=new BigDecimal(val);
           BigDecimal bd2=new BigDecimal(val2);
   
           field.setText(String.valueOf((bd.multiply(bd2))));
               

           } catch (Exception e) {
                field.setText("Error");
           }
                 result = 1;
          operator = "";
           val = "";
           val2 = "";
           a=0;
            one_operator = 0;
            one_dot = 0;
            one_plus_minus = 0;
       }
       else if(operator == " / ")
       {
           try {
                Double bd=new Double(val);
           Double bd2=new Double(val2);
           

           field.setText(String.valueOf((bd/bd2)));
                    

           } catch (Exception e) {
                field.setText("Error");
           }
            result = 1;
           operator = "";
           val = "";
           val2 = "";
           a=0;
            one_operator = 0;
            one_dot = 0;
            one_plus_minus = 0;
       }
      else if(operator == " % ")
       {
           try {
               BigInteger bd=new BigInteger(val);
           BigInteger bd2=new BigInteger(val2);
      
           field.setText(String.valueOf((bd.mod(bd2))));
                    

           } catch (Exception e) {
               field.setText("Error");
           }
             result = 1;
         operator = "";
           val = "";
           val2 = "";
           a=0;
            one_operator = 0;
            one_dot = 0;
            one_plus_minus = 0;
       }
       
         else if(operator == " ^ ")
       {
           try {
        double d1=Double.parseDouble(val);
       double d2=Double.parseDouble(val2);
           
           field.setText(String.valueOf(Math.pow(d1, d2)));
                   

           } catch (Exception e) {
                field.setText("Error");
           }
           result = 1;
         operator = "";
           val = "";
           val2 = "";
           a=0;
            one_operator = 0;
            one_dot = 0;
            one_plus_minus = 0;
       }
        
    }//GEN-LAST:event_equalsActionPerformed

    private void multiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiplyActionPerformed
         if(one_operator == 0 && !"".equals(field.getText()))
        {
        operator = " * ";
        val = field.getText();
       field.setText(field.getText() + operator);
       a=1;
       one_operator = 1;
       one_dot = 0;
       one_plus_minus = 2;
        }
    }//GEN-LAST:event_multiplyActionPerformed

    private void minusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusActionPerformed
         if(one_operator == 0 && !"".equals(field.getText()))
        {
      operator = " - ";
        val = field.getText();
       field.setText(field.getText() + operator);
       a=1;
       one_operator = 1;
       one_dot = 0;
       one_plus_minus = 2;
        }
    }//GEN-LAST:event_minusActionPerformed

    private void threeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threeActionPerformed
  
         if(a == 0)
        {
             if(result == 1)
           {
                result = 0;
                field.setText("");
           }
            val += "3";
          
           field.setText(field.getText() + "3");
        }
       else if(a == 1)
       {
           val2 += "3";
           
   
           field.setText(field.getText() + "3");
           
       }
    }//GEN-LAST:event_threeActionPerformed

    private void erase_allActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_erase_allActionPerformed
       val = "";
       field.setText("");
       a = 0;
       val2="";
       operator = "";
       one_operator = 0;
       one_dot = 0;
       one_plus_minus = 0;
          result = 0;
    }//GEN-LAST:event_erase_allActionPerformed

    private void modulusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modulusActionPerformed
        if(one_operator == 0 && !"".equals(field.getText()))
        {
      operator = " % ";
        val = field.getText();
       field.setText(field.getText() + operator);
       a=1;
       one_operator = 1;
       one_dot = 0;
       one_plus_minus = 2;
        }
    }//GEN-LAST:event_modulusActionPerformed

    private void divideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divideActionPerformed
       if(one_operator == 0 && !"".equals(field.getText()))
        {
        operator = " / ";
        val = field.getText();
       field.setText(field.getText() + operator);
       a=1;
       one_operator = 1;
       one_dot = 0;
       one_plus_minus = 2;
        }
    }//GEN-LAST:event_divideActionPerformed

    private void erase_oneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_erase_oneActionPerformed
        try {
            if(field.getText() != "" && a == 0)
            {
                    StringBuffer sb=new StringBuffer(val);
                       sb.deleteCharAt(sb.length()-1);
                       val = String.valueOf(sb);
                       field.setText(val);
           
                }
            else if(field.getText() != "" && a == 1)
            {
                    StringBuffer sb=new StringBuffer(val2);
                       sb.deleteCharAt(sb.length()-1);
                       val2 = String.valueOf(sb);
                       field.setText(String.valueOf(val + operator + val2 ));
           
                }
        } catch (Exception e) {
        }
      
       
    }//GEN-LAST:event_erase_oneActionPerformed

    private void tanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tanActionPerformed
    if("".equals(operator) && !"".equals(field.getText()))
    {
             try {
       
          double  d1=Math.tan(Math.toRadians((Double.parseDouble(field.getText()))));
          display = String.valueOf(d1);
           field.setText(display);
          
           } catch (Exception e) {
               field.setText("Error");
           }
            result = 1;
         operator = "";
           val = "";
           val2 = "";
           a=0;
            one_operator = 0;
            one_dot = 0;
            one_plus_minus = 0;
       
    }
    }//GEN-LAST:event_tanActionPerformed

    private void cosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cosActionPerformed
          if("".equals(operator) && !"".equals(field.getText()))
        {
               try {
       
          double  d1=Math.cos(Math.toRadians((Double.parseDouble(field.getText()))));
          display = String.valueOf(d1);
           field.setText(display);
        
           } catch (Exception e) {
               field.setText("Error");
           }
              result = 1;
         operator = "";
           val = "";
           val2 = "";
           a=0;
            one_operator = 0;
            one_dot = 0;
            one_plus_minus = 0;
        
        }
    }//GEN-LAST:event_cosActionPerformed

    private void sinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sinActionPerformed
         if("".equals(operator) && !"".equals(field.getText()))
        {
              try {
       
          double  d1=Math.sin(Math.toRadians((Double.parseDouble(field.getText()))));
          display = String.valueOf(d1);
           field.setText(display);
       
           } catch (Exception e) {
               field.setText("Error");
           }
               result = 1;
         operator = "";
           val = "";
           val2 = "";
           a=0;
            one_operator = 0;
            one_dot = 0;
            one_plus_minus = 0;
       
        }
            
    }//GEN-LAST:event_sinActionPerformed

    private void sin_inverseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sin_inverseActionPerformed
     if("".equals(operator) && !"".equals(field.getText()))
        {
                try {
       
          double  d1=Math.toDegrees(Math.asin((Double.parseDouble(field.getText()))));
         display = String.valueOf(d1);
           field.setText(display);
         
           } catch (Exception e) {
               field.setText("Error");
           }
             result = 1;
         operator = "";
           val = "";
           val2 = "";
           a=0;
            one_operator = 0;
            one_dot = 0;
            one_plus_minus = 0;
         
        }
    }//GEN-LAST:event_sin_inverseActionPerformed

    private void lnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lnActionPerformed
          if("".equals(operator) && !"".equals(field.getText()))
        {
               try {
       
          double  d1=Math.log(Double.parseDouble(field.getText()));
         display = String.valueOf(d1);
           field.setText(display);
        
           } catch (Exception e) {
               field.setText("Error");
           }
              result = 1;
         operator = "";
           val = "";
           val2 = "";
           a=0;
            one_operator = 0;
            one_dot = 0;
            one_plus_minus = 0;
           
        }
    }//GEN-LAST:event_lnActionPerformed

    private void logActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logActionPerformed
         if("".equals(operator) && !"".equals(field.getText()))
        {
               try {
       
          double  d1=Math.log10(Double.parseDouble(field.getText()));
         display = String.valueOf(d1);
           field.setText(display);
       
           } catch (Exception e) {
               field.setText("Error");
           }
               result = 1;
         operator = "";
           val = "";
           val2 = "";
           a=0;
            one_operator = 0;
            one_dot = 0;
            one_plus_minus = 0;
        
        }
    }//GEN-LAST:event_logActionPerformed

    private void powerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_powerActionPerformed
       if(one_operator == 0 &&  !"".equals(field.getText()))
        {
        operator = " ^ ";
        val = field.getText();
       field.setText(field.getText() + operator);
       a=1;
       one_operator = 1;
       one_dot = 0;
       one_plus_minus = 2;
        }
    }//GEN-LAST:event_powerActionPerformed

    private void tan_inverseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tan_inverseActionPerformed
     if("".equals(operator) && !"".equals(field.getText()))
        {
              try {
       
          double  d1=Math.toDegrees(Math.atan((Double.parseDouble(field.getText()))));
         display = String.valueOf(d1);
           field.setText(display);
       
           } catch (Exception e) {
               field.setText("Error");
           }
               result = 1;
         operator = "";
           val = "";
           val2 = "";
           a=0;
            one_operator = 0;
            one_dot = 0;
            one_plus_minus = 0;
     
        }
    }//GEN-LAST:event_tan_inverseActionPerformed

    private void cos_inverseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cos_inverseActionPerformed
    if("".equals(operator) && !"".equals(field.getText()))
        {
               try {
       
          double  d1=Math.toDegrees(Math.acos((Double.parseDouble(field.getText()))));
         display = String.valueOf(d1);
           field.setText(display);
      
           } catch (Exception e) {
               field.setText("Error");
           }
                result = 1;
         operator = "";
           val = "";
           val2 = "";
           a=0;
            one_operator = 0;
            one_dot = 0;
            one_plus_minus = 0;
        
        }
    }//GEN-LAST:event_cos_inverseActionPerformed

    private void squareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_squareActionPerformed
    if(operator == "" && field.getText() != "")
     {
        try {
          double d1=Math.pow(Double.parseDouble(field.getText()), 2);
          display = String.valueOf(d1);
           field.setText(display);
         
           } catch (Exception e) {
               field.setText("Error");
           }
             result = 1;
         operator = "";
           val = "";
           val2 = "";
           a=0;
            one_operator = 0;
            one_dot = 0;
            one_plus_minus = 0;
       }
    }//GEN-LAST:event_squareActionPerformed

    private void oneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneActionPerformed
     
         if(a == 0 )
        {
           if(result == 1)
           {
                result = 0;
                field.setText("");
           }
            val += "1";
          
           field.setText(field.getText() + "1");
        }
       else if(a == 1)
       {
           val2 += "1";
           
   
           field.setText(field.getText() + "1");
           
       }
      
       
    }//GEN-LAST:event_oneActionPerformed
   
    private void twoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoActionPerformed

         if(a == 0)
        {
             if(result == 1)
           {
                result = 0;
                field.setText("");
           }
            val += "2";
          
           field.setText(field.getText() + "2");
        }
       else if(a == 1)
       {
           val2 += "2";
           
   
           field.setText(field.getText() + "2");
           
       }
    }//GEN-LAST:event_twoActionPerformed

    private void fourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fourActionPerformed
        
         if(a == 0)
        {
             if(result == 1)
           {
                result = 0;
                field.setText("");
           }
            val += "4";
          
           field.setText(field.getText() + "4");
        }
       else if(a == 1)
       {
           val2 += "4";
           
   
           field.setText(field.getText() + "4");
           
       }
    }//GEN-LAST:event_fourActionPerformed

    private void fiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiveActionPerformed
      
         if(a == 0 )
        {
             if(result == 1)
           {
                result = 0;
                field.setText("");
           }
            val += "5";
          
           field.setText(field.getText() + "5");
        }
       else if(a == 1)
       {
           val2 += "5";
           
   
           field.setText(field.getText() + "5");
           
       }
    }//GEN-LAST:event_fiveActionPerformed

    private void sixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sixActionPerformed
       
         if(a == 0)
        {
             if(result == 1)
           {
                result = 0;
                field.setText("");
           }
            val += "6";
          
           field.setText(field.getText() + "6");
        }
       else if(a == 1)
       {
           val2 += "6";
           
   
           field.setText(field.getText() + "6");
           
       }
    }//GEN-LAST:event_sixActionPerformed

    private void sevenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sevenActionPerformed
       
         if(a == 0)
        {
             if(result == 1)
           {
                result = 0;
                field.setText("");
           }
            val += "7";
          
           field.setText(field.getText() + "7");
        }
       else if(a == 1)
       {
           val2 += "7";
           
   
           field.setText(field.getText() + "7");
           
       }
    }//GEN-LAST:event_sevenActionPerformed

    private void eightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eightActionPerformed
     
         if(a == 0)
        {
             if(result == 1)
           {
                result = 0;
                field.setText("");
           }
            val += "8";
          
           field.setText(field.getText() + "8");
        }
       else if(a == 1)
       {
           val2 += "8";
           
   
           field.setText(field.getText() + "8");
           
       }
    }//GEN-LAST:event_eightActionPerformed

    private void nineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nineActionPerformed
  
         if(a == 0)
        {
             if(result == 1)
           {
                result = 0;
                field.setText("");
           }
            val += "9";
          
           field.setText(field.getText() + "9");
        }
       else if(a == 1)
       {
           val2 += "9";
           
           field.setText(field.getText() + "9");
           
       }
    }//GEN-LAST:event_nineActionPerformed

    private void zeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zeroActionPerformed
  
         if(a == 0)
        {
             if(result == 1)
           {
                result = 0;
                field.setText("");
           }
            val += "0";
          
           field.setText(field.getText() + "0");
        }
       else if(a == 1)
       {
           val2 += "0";
           
   
           field.setText(field.getText() + "0");
           
       }
    }//GEN-LAST:event_zeroActionPerformed

    private void dotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dotActionPerformed
     
         if(a == 0)
        {
             if(result == 1)
           {
                result = 0;
                field.setText("");
           }
            val += ".";
          
           field.setText(field.getText() + ".");
        }
       else if(a == 1)
       {
           val2 += ".";
           
   
           field.setText(field.getText() + ".");
           
       }
    }//GEN-LAST:event_dotActionPerformed

    private void fieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldKeyPressed
    }//GEN-LAST:event_fieldKeyPressed

    private void oneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_oneKeyTyped

    }//GEN-LAST:event_oneKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(calculator_main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(calculator_main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(calculator_main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(calculator_main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new calculator_main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cos;
    private javax.swing.JButton cos_inverse;
    private javax.swing.JButton divide;
    private javax.swing.JButton dot;
    public javax.swing.JButton eight;
    private javax.swing.JButton equals;
    private javax.swing.JButton erase_all;
    private javax.swing.JButton erase_one;
    private javax.swing.JTextField field;
    public javax.swing.JButton five;
    public javax.swing.JButton four;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton ln;
    private javax.swing.JButton log;
    private javax.swing.JButton minus;
    private javax.swing.JButton modulus;
    private javax.swing.JButton multiply;
    private javax.swing.JButton nine;
    public javax.swing.JButton one;
    private javax.swing.JButton plus;
    private javax.swing.JButton plus_minus;
    private javax.swing.JButton power;
    public javax.swing.JButton seven;
    private javax.swing.JButton sin;
    private javax.swing.JButton sin_inverse;
    public javax.swing.JButton six;
    private javax.swing.JButton square;
    private javax.swing.JButton tan;
    private javax.swing.JButton tan_inverse;
    public javax.swing.JButton three;
    public javax.swing.JButton two;
    private javax.swing.JButton zero;
    // End of variables declaration//GEN-END:variables
}